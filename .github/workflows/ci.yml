name: Check diff main/dev-pt

on:
  schedule:
  - cron: "0 0 * * 0"

jobs:
  diff-issue:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Execute the diff
        run: |
            git clone -b main https://github.com/cncf/glossary.git upstream
            git clone -b dev-pt https://github.com/cncf/glossary.git dev-pt
            echo "Updated files: "
            diff --brief -r upstream/content/en dev-pt/content/pt-br | grep differ | awk '/content/ {print $2}' > update-diff.md
            echo "Files that exists only in main:"
            diff --brief -r upstream/content/en dev-pt/content/pt-br | grep "Only in upstream/content/en" | cut -d" " -f3-4 > new-diff.md
    
      - name: Setup input- update
        id: update
        run: |
          UPDATE_FILE=$(cat update-diff.md)
          UPDATE_FILE="${UPDATE_FILE//'%'/'%25'}"
          UPDATE_FILE="${UPDATE_FILE//$'\n'/'%0A'}"
          UPDATE_FILE="${UPDATE_FILE//$'\r'/'%0D'}"
          echo "::set-output name=updateFile::$UPDATE_FILE"
        
      - name: Setup input - only
        id: new
        run: |
          NEW_FILES=$(cat new-diff.md)
          NEW_FILES="${NEW_FILES//'%'/'%25'}"
          NEW_FILES="${NEW_FILES//$'\n'/'%0A'}"
          NEW_FILES="${NEW_FILES//$'\r'/'%0D'}"
          echo "::set-output name=newFiles::$NEW_FILES"

      - uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          UPDATED_FILES: ${{ steps.update.outputs.updateFile }}
          NEW_FILES: ${{ steps.new.outputs.newFiles }}
            
